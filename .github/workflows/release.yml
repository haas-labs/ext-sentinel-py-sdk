name: Release-and-Next-Version

on:
  pull_request:
    types:
    - closed
    branches:
    - main

jobs:

  Release:
    if: 
      github.event.pull_request.merged && startsWith(github.event.pull_request.head.ref, 'release/')

    runs-on: ubuntu-latest
    
    steps:

    - uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Set up Python 
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
        cache: "pip"

    - name: Install deployment/dev tools & sentinel sdk
      run: |
        ./scripts/install all

    - name: Setup AWS Code Artifactory access
      run: |
        aws codeartifact login \
          --tool twine \
          --repository sentinel-pypi \
          --domain haas \
          --domain-owner ${{ secrets.AWS_ACCOUNT_ID}} \
          --region eu-west-1

    - name: Run tests
      run: |
        ./scripts/test ${{ matrix.python-version }}

    - name: Bumping release version and tagging
      run: |
        RELEASE_VERSION=`./scripts/release get-release-version ${{ github.event.pull_request.head.ref }}`
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"

        hatch version ${RELEASE_VERSION}
        git add src/sentinel/version.py
        git commit -m "release: $RELEASE_VERSION"
        git push

        git tag ${RELEASE_VERSION}
        git push --tags

    - name: Build and deploy to AWS Code Artifact
      run: |
        ./scripts/build
        twine upload --repository codeartifact dist/ext_sentinel_py_sdk*.whl

    - name: Bumping next dev version
      run: |
        CURRENT_VERSION=`hatch version`
        hatch version dev
        NEXT_VERSION=`hatch version`
        git add src/sentinel/version.py
        git commit -m "bump: $CURRENT_VERSION → $NEXT_VERSION"
        git push

  Next-Dev-Version:

    needs: Release
    if: |
      always() && needs.Release.result == 'skipped'

    runs-on: ubuntu-latest
    
    steps:

    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
        cache: "pip"

    - name: Install deployment/dev tools & sentinel sdk
      run: |
        ./scripts/install deployment-tools

    - name: Bumping dev version
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        CURRENT_VERSION=`hatch version`
        hatch version dev
        NEXT_VERSION=`hatch version`
        git add src/sentinel/version.py
        git commit -m "bump: $CURRENT_VERSION → $NEXT_VERSION"
        git push
