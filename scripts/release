#!/usr/bin/env bash

# to terminate as soon as any command it executes fails, 
# i.e., returns a non-zero exit status. 
set -e

VERSION_FILE="src/sentinel/version.py"

help() {

    echo "./scripts/release <command>"
    echo
    echo "  current-version:        show current version"
    echo "  bump-release-version:   bump release version"
    echo "  bump-next-version:      bump next version"
    echo
}

set-bot-name() {

    git config --local user.name "github-actions[bot]"
    git config --local user.email "github-actions[bot]@users.noreply.github.com"
}

commit-version() {

    CURRENT_VERSION=${1:-}
    NEXT_VERSION=${2:-}

    git add ${VERSION_FILE}
    git commit -m "Bump version: ${CURRENT_VERSION} â†’ ${NEXT_VERSION}"
}

current-version() {

    CURRENT_VERSION=`setuptools-git-versioning`
    echo "[INFO] Current version: ${CURRENT_VERSION}"
}

get-release-version() {

    RELEASE_BRANCH=${1:-}
    if [[ $RELEASE_BRANCH == release/* ]];
    then
        VERSION=${RELEASE_BRANCH#release/}
        echo "[INFO] Release branch: ${RELEASE_BRANCH}, Version: ${VERSION}" 1>&2
        echo $VERSION
    else
        echo "[ERROR] Incorrect release branch name, ${RELEASE_BRANCH}, expected: release/v{}.{}.{}" 1>&2 
        exit 1
    fi
}
# git push
# git push --tags


$@