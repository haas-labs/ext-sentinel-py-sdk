#!/usr/bin/env python3

import json
import asyncio
import argparse
import websockets

from sentinel.utils.logger import get_logger
from sentinel.models.transaction import Transaction


logger = get_logger(__name__)


async def run(uri: str) -> None:

    current_block = None
    blocks_stats = {}

    try:
        async with websockets.connect(uri) as ws_server:
            async for msg in ws_server:
                tx = Transaction(**json.loads(msg))
                
                # block and transaction parameters
                block_number = tx.block.number
                transaction_count = tx.block.transaction_count
                tx_index = tx.transaction_index

                if block_number not in blocks_stats:
                    blocks_stats[block_number] = {
                        'tx_count': transaction_count,
                        'tx_index': [tx_index,]
                    }
                else:
                    blocks_stats[block_number]['tx_index'].append(tx_index)

                if current_block != block_number:
                    for blk_id in blocks_stats:
                        logger.info({
                            'blk_id': blk_id,
                            'tx_count': blocks_stats[blk_id]['tx_count'],
                            'founded_tx': len(set(blocks_stats[blk_id]['tx_index']))
                        })
                    current_block = block_number
    finally:
        logger.info("Closing connection to websocket channel")


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--log-level", default="INFO", help="Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL")
    parser.add_argument("--uri", type=str, required=True, help="Websocket URI")
    args = parser.parse_args()

    try:
        asyncio.run(run(uri=args.uri))
    except KeyboardInterrupt:
        logger.info("Interrupted by user")
